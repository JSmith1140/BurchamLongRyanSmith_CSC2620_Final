@startuml Bank Class Diagram
' Login Page class
class LoginPage {
    - lblTitle : JLabel
    - lblUser : JLabel
    - lblPass : JLabel
    - tfUser : JTextField
    - pfPass : JPasswordField
    - btnRegister : JButton
    - btnLogin : JButton
    + LoginPage()
    - register() : void
    - login() : void
}

' RegisterPage class
class RegisterPage {
    - lblTitle : JLabel
    - lblUser : JLabel
    - lblPass : JLabel
    - lblSavings : JLabel
    - lblChecking : JLabel
    - lblPin : JLabel
    - tfUser : JTextField
    - tfSavings : JTextField
    - tfChecking : JTextField
    - pfPass : JPasswordField
    - pfPin : JPasswordField
    - btnRegister : JButton
    - btnExit : JButton
    + RegisterPage()
    - register() : void
    - showMessage(title: String, message: String, type: int) : void
}

' BankWelcomePage class
class BankWelcomePage {
    - checkingBalance : double
    - savingsBalance : double
    - checkingChange : double
    - savingsChange : double
    - prevCheckingBalance : double
    - prevSavingsBalance : double
    - accountNumber : double
    - username : String
    - tabbedPane : JTabbedPane
    - SERVER_IP : String
    - SERVER_PORT : int
    - BLOCKINGQUEUE<String> responseQueue
    - liveSocket : Socket
    - liveIn : BufferedReader
    - liveOut : PrintWriter
    + BalanceObserver() : interface
    - List<BalanceObserver> observers
    + addObserver(observer) : void
    + notifyObservers() : void
    + startLiveConnection() : void
    + enqueueServerResponse(response) : void
    + sendMoneyToUser(recipient, amount, fromChecking) : boolean
    + sendRequestToUser(recipient, amount, toChecking) : boolean
    + BankWelcomePage(username: String, checkingBalance: double, savingsBalance: double, accountNumber: double)
    - initUI() : void
    + verfiyPin(pin) : boolean
    + logRequestToUser(otherUsername, amount) : void
    + recieveLiveMoney(sender, amount, accountType) : void
    - createHomeTab() : JPanel
    - createAccountBox(title : String, balance : double, change : double) : JPanel
    + updateCheckingBalance(amount : double) : boolean
    + updateSavingsBalance(amount : double) : boolean
    + goToHomeTab() : void
    + updateCredentialsFile() : void
    + setCheckingBalance(checkingBalance : double) : void
    + setSavingsBalance(savingsBalance : double) : void
}

' TransactionsPanel Class
class TransactionsPanel {
    - parentFrame : BankWelcomePage
    + TransactionsPanel(parentFrame : BankWelcomePage)
}

' AccountTab class
class AccountTab {
    - checkingBalance : double
    - savingsBalance : double
    - accountNumber : double
    - username : String
    - parentFrame : BankWelcomePage
    - txtTransactions : JTextArea
    + AccountTab(String username, double checking, double savings, double accountNumber, BankWelcomePage parentFrame)
    - createTransactionPanel() : JPanel
    - logTransaction(String message) : void
    - loadTransactions() : void
}

' TransactionServer class
class TransactionServer {
    - HashMap<String, PrintWriter> liveUsers
}

' Transaction Handler class
class TransactionHandler {
    - socket : Socket
    - in : BufferedReader
    - out : PrintWriter
    - username : String
    + TransactionHandler(Socket)
    + run(): void
}

' ClientRecieverThread class
class ClientReceiverThread {
    - parent : BankWelcomePage
    - in : BufferReader
    + ClientReceiverThread(BankWelcomePage, BufferedReader)
    + run(): void
}

' Relations
LoginPage --> RegisterPage : opens when register button is pressed
LoginPage --> BankWelcomePage : opens when user successfully logs in
RegisterPage --> LoginPage : opens after registration
TransactionsPanel --> BankWelcomePage : uses BankWelcomePage
AccountTab --> BankWelcomePage : uses BankWelcomePage
TransactionServer -> TransactionHandler : creates
TransactionServer --> BankWelcomePage : requires
ClientReceiverThread -> BankWelcomePage : uses
@enduml
